using DevExpress.Utils;
using DevExpress.XtraEditors;
using DevExpress.XtraGrid.Columns;
using DevExpress.XtraGrid.Views.Grid;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace CrmPosKurİşlem
{
    public partial class Frfifodetaystk : DevExpress.XtraEditors.XtraForm
    {
        MRTREntities db = new MRTREntities();
        public Frfifodetaystk()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
           // gridControl1.DataSource = new System.ComponentModel.BindingList <List <CrmPosKurİşlem.Frfifodetaystk.ResultForFifostokdetay>>() /* TODO: Assign the real data here.*/;
        }
        public class ResultForFifostokdetay
        {
            public string KOD { get; set; }
            public string BARKOD { get; set; }
            public string STOK_ADI { get; set; }
            public long SATId { get; set; }
            public long ALId { get; set; }
            public DateTime SAT_FIS_TARIHI { get; set; }
            public DateTime AL_FIS_TARIHI { get; set; }
            public decimal AL_TOP_MIK { get; set; }
            public decimal SAT_MIK { get; set; }
           
            public decimal AL_KUR { get; set; }
            public decimal SAT_KUR { get; set; }
            
            public decimal AL_TL { get; set; }
            public decimal SAT_TL { get; set; }
            public decimal AL_DVZ { get; set; }
            public decimal KUR_BUGUN { get; set; }
            public decimal AL_TL_DEGERI_BUGUN { get; set; }
            public decimal SAT_DVZ { get; set; }        
            public decimal DOVIZ_KAR { get; set; }
        }
        private void simpleButton1_Click(object sender, EventArgs e)
        {
            if (lookUpEdit1.Text != "<Seçiniz>")
            {
                listele();
            }
            else
            {
                XtraMessageBox.Show("Lokasyon Seçimi Yapmalısın..", "Warning", MessageBoxButtons.OK, MessageBoxIcon.Question);
            }
        }
        public void listele()
        {
            try
            {
                gridControl1.DataSource = null;

                //long kodu = long.Parse(lookUpEdit1.EditValue.ToString());

                var clientIdParameter = new SqlParameter("@lokasyonid", (string)lookUpEdit1.EditValue);

                var result = db.Database.SqlQuery<ResultForFifostokdetay>("crmpos_fifo_stok_doviz @lokasyonid", clientIdParameter).ToList();                
                

                gridControl1.DataSource = result;
                //gridControl1.ForceInitialize();
                //gridView1.BestFitColumns();
                //gridView1.Columns["Lkid"].Visible = false;
                //gridView1.Columns["Dvzid"].Visible = false;
                gridView1.Columns["SAT_FIS_TARIHI"].DisplayFormat.FormatType = DevExpress.Utils.FormatType.DateTime;
                gridView1.Columns["SAT_FIS_TARIHI"].DisplayFormat.FormatString = "dd/MM/yyyy hh:mm:ss";
                gridView1.Columns["AL_FIS_TARIHI"].DisplayFormat.FormatType = DevExpress.Utils.FormatType.DateTime;
                gridView1.Columns["AL_FIS_TARIHI"].DisplayFormat.FormatString = "dd/MM/yyyy hh:mm:ss";
            }
            catch (Exception e)
            {

                MessageBox.Show(e.ToString());
            }
            

        }
        FileStream fs;
        string fileName = "c:\\ERP12\\fifodisplaycrmpos.xml";
        private void Frfifodetaystk_Load(object sender, EventArgs e)
        {
            if (File.Exists(@"C:\ERP12\fifodisplaycrmpos.xml"))
            {
                
                // MessageBox.Show("Dosya bulundu.");
            }
            else
            {
                fs = File.Create(@"C:\ERP12\fifodisplaycrmpos.xml");
                fs.Close();                
                //  MessageBox.Show("Dosya mevcut değil.");
            }
            var list = new List<long> { 3320 };
            lookUpEdit1.Properties.DataSource = db.LOKASYON.Where(x => !list.Contains(x.ID)).ToList();
            lookUpEdit1.Properties.DisplayMember = "AD";
            lookUpEdit1.Properties.ValueMember = "ID";
            DevExpress.XtraEditors.Controls.LookUpColumnInfo col;
            col = new DevExpress.XtraEditors.Controls.LookUpColumnInfo("AD", "Lokasyon Seçiniz", 100);
            //col.SortOrder = DevExpress.Data.ColumnSortOrder.Descending;
            lookUpEdit1.Properties.Items.Add(col);
            gridView1.OptionsBehavior.Editable = false;      
            gridView1.OptionsView.ShowAutoFilterRow = true;
            gridControl1.ForceInitialize();
            
            try
            {
                gridControl1.MainView.RestoreLayoutFromXml(fileName);
            }
            catch (Exception)
            {
                //XtraMessageBox.Show("Görünüm ayarları yüklenemedi(İlk kez çalıştırıyorsanız dikkate almayınız)", "Warning", MessageBoxButtons.OK, MessageBoxIcon.Question);                
            }
            

        }
        private void Frfifodetaystk_FormClosing(object sender, FormClosingEventArgs e)
        {
            // Save the layout to an XML file
            gridControl1.MainView.SaveLayoutToXml(fileName);
        }     

        private void exceleAktarToolStripMenuItem_Click(object sender, EventArgs e)
        {
            using (SaveFileDialog saveDialog = new SaveFileDialog())
            {
                saveDialog.Filter = "Excel (2003)(.xls)|*.xls|Excel (2010) (.xlsx)|*.xlsx |RichText File (.rtf)|*.rtf |Pdf File (.pdf)|*.pdf |Html File (.html)|*.html";
                if (saveDialog.ShowDialog() != DialogResult.Cancel)
                {
                    string exportFilePath = saveDialog.FileName;
                    string fileExtenstion = new System.IO.FileInfo(exportFilePath).Extension;

                    switch (fileExtenstion)
                    {
                        case ".xls":
                            gridControl1.ExportToXls(exportFilePath);
                            break;
                        case ".xlsx":
                            gridControl1.ExportToXlsx(exportFilePath);
                            break;
                        case ".rtf":
                            gridControl1.ExportToRtf(exportFilePath);
                            break;
                        case ".pdf":
                            gridControl1.ExportToPdf(exportFilePath);
                            break;
                        case ".html":
                            gridControl1.ExportToHtml(exportFilePath);
                            break;
                        case ".mht":
                            gridControl1.ExportToMht(exportFilePath);
                            break;
                        default:
                            break;
                    }

                    if (File.Exists(exportFilePath))
                    {
                        try
                        {
                            //Try to open the file and let windows decide how to open it.
                            System.Diagnostics.Process.Start(exportFilePath);
                        }
                        catch
                        {
                            String msg = "The file could not be opened." + Environment.NewLine + Environment.NewLine + "Path: " + exportFilePath;
                            MessageBox.Show(msg, "Error!", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        }
                    }
                    else
                    {
                        String msg = "The file could not be saved." + Environment.NewLine + Environment.NewLine + "Path: " + exportFilePath;
                        MessageBox.Show(msg, "Error!", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }
                }
            }
        }

        private void gridView1_RowCellStyle(object sender, DevExpress.XtraGrid.Views.Grid.RowCellStyleEventArgs e)
        {
            GridView view = sender as GridView;
            //decimal abc = (decimal)view.GetRowCellValue(e.RowHandle, "SAT_DVZ");
            if (e.Column.FieldName == "DOVIZ_KAR")
            {
                var abc = view.GetRow(e.RowHandle) as ResultForFifostokdetay;
                if (abc != null)
                {
                    e.Appearance.Font = new Font(e.Appearance.Font, abc.DOVIZ_KAR > 10 ? FontStyle.Bold:FontStyle.Regular);
                    e.Appearance.BackColor = abc.DOVIZ_KAR > 10 ? Color.LightGreen : Color.LightSalmon;
                    e.Appearance.TextOptions.HAlignment = abc.DOVIZ_KAR > 10 ? HorzAlignment.Far : HorzAlignment.Near;
                }
           
            }
            else if (e.Column.FieldName == "AL_TOP_MIK")
            {
                var abc = view.GetRow(e.RowHandle) as ResultForFifostokdetay;
                if (abc != null)
                {
                    e.Appearance.Font = new Font(e.Appearance.Font, abc.AL_TOP_MIK > 0 ? FontStyle.Bold : FontStyle.Bold);
                    e.Appearance.ForeColor = abc.AL_TOP_MIK > 0 ? Color.Green : Color.Green;
                    e.Appearance.TextOptions.HAlignment = abc.AL_TOP_MIK > 0 ? HorzAlignment.Far : HorzAlignment.Near;
                }

            }
            else if (e.Column.FieldName == "SAT_MIK")
            {
                var abc = view.GetRow(e.RowHandle) as ResultForFifostokdetay;
                if (abc != null)
                {
                    e.Appearance.Font = new Font(e.Appearance.Font, abc.SAT_MIK > 0 ? FontStyle.Bold : FontStyle.Bold);
                    e.Appearance.ForeColor = abc.SAT_MIK > 0 ? Color.Red : Color.Red;
                    e.Appearance.TextOptions.HAlignment = abc.SAT_MIK > 0 ? HorzAlignment.Far : HorzAlignment.Near;
                }

            }
            else if (e.Column.FieldName == "AL_KUR")
            {
                var abc = view.GetRow(e.RowHandle) as ResultForFifostokdetay;
                if (abc != null)
                {
                    e.Appearance.Font = new Font(e.Appearance.Font, abc.AL_KUR > 0 ? FontStyle.Bold : FontStyle.Bold);
                    e.Appearance.ForeColor = abc.AL_KUR > 0 ? Color.Green : Color.Green;
                    e.Appearance.TextOptions.HAlignment = abc.AL_KUR > 0 ? HorzAlignment.Far : HorzAlignment.Near;
                }

            }
            else if (e.Column.FieldName == "SAT_KUR")
            {
                var abc = view.GetRow(e.RowHandle) as ResultForFifostokdetay;
                if (abc != null)
                {
                    e.Appearance.Font = new Font(e.Appearance.Font, abc.SAT_KUR > 0 ? FontStyle.Bold : FontStyle.Bold);
                    e.Appearance.ForeColor = abc.SAT_KUR > 0 ? Color.Red : Color.Red;
                    e.Appearance.TextOptions.HAlignment = abc.SAT_KUR > 0 ? HorzAlignment.Far : HorzAlignment.Near;
                }

            }
            else if (e.Column.FieldName == "AL_TL")
            {
                var abc = view.GetRow(e.RowHandle) as ResultForFifostokdetay;
                if (abc != null)
                {
                    e.Appearance.Font = new Font(e.Appearance.Font, abc.AL_TL > 0 ? FontStyle.Bold : FontStyle.Bold);
                    e.Appearance.ForeColor = abc.AL_TL > 0 ? Color.Green : Color.Green;
                    e.Appearance.TextOptions.HAlignment = abc.AL_TL > 0 ? HorzAlignment.Far : HorzAlignment.Near;
                }

            }
            else if (e.Column.FieldName == "SAT_TL")
            {
                var abc = view.GetRow(e.RowHandle) as ResultForFifostokdetay;
                if (abc != null)
                {
                    e.Appearance.Font = new Font(e.Appearance.Font, abc.SAT_TL > 0 ? FontStyle.Bold : FontStyle.Bold);
                    e.Appearance.ForeColor = abc.SAT_TL > 0 ? Color.Red : Color.Red;
                    e.Appearance.TextOptions.HAlignment = abc.SAT_TL > 0 ? HorzAlignment.Far : HorzAlignment.Near;
                }

            }
            else if (e.Column.FieldName == "AL_DVZ")
            {
                var abc = view.GetRow(e.RowHandle) as ResultForFifostokdetay;
                if (abc != null)
                {
                    e.Appearance.Font = new Font(e.Appearance.Font, abc.AL_DVZ > 0 ? FontStyle.Bold : FontStyle.Bold);
                    e.Appearance.ForeColor = abc.AL_DVZ > 0 ? Color.Green : Color.Green;
                    e.Appearance.TextOptions.HAlignment = abc.AL_DVZ > 0 ? HorzAlignment.Far : HorzAlignment.Near;
                }

            }
            else if (e.Column.FieldName == "SAT_DVZ")
            {
                var abc = view.GetRow(e.RowHandle) as ResultForFifostokdetay;
                if (abc != null)
                {
                    e.Appearance.Font = new Font(e.Appearance.Font, abc.SAT_DVZ > 0 ? FontStyle.Bold : FontStyle.Bold);
                    e.Appearance.ForeColor = abc.SAT_DVZ > 0 ? Color.Red : Color.Red;
                    e.Appearance.TextOptions.HAlignment = abc.SAT_DVZ > 0 ? HorzAlignment.Far : HorzAlignment.Near;
                }

            }
        }

        
    }
   
}
