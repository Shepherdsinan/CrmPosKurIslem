using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace CrmPosKurİşlem
{
    public partial class FrKasaguntoplam : DevExpress.XtraEditors.XtraForm
    {
        public FrKasaguntoplam()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            //gridControl1.DataSource = new System.ComponentModel.BindingList<CrmPosKurİşlem.FrKasaguntoplam.ResultForkasa>() /* TODO: Assign the real data here.*/;
            // This line of code is generated by Data Source Configuration Wizard
            //gridControl1.DataSource = new System.ComponentModel.BindingList<CrmPosKurİşlem.FrKasaguntoplam.ResultForkasa>() /* TODO: Assign the real data here.*/;
        }
        MRTREntities db = new MRTREntities();

        public class ResultForkasa
        {
            public string TARIH { get; set; }
            public string HAREKET { get; set; }
            public decimal TUTAR_DOVIZ { get; set; }
            public decimal HAREKET_KURU { get; set; }
            public decimal BAKIYE_DOVIZ { get; set; }                     
            public string DOVIZ { get; set; }
            public decimal TL_DEGER { get; set; }
            public decimal KASADAKI_TL_DEGER { get; set; }
            public decimal TL_DEGER_FARKI { get; set; }
            public decimal KUR_FARKI_DOVIZ { get; set; }
            public decimal KUR_FARKI_TL { get; set; }
            public decimal KF_BAKIYE_DOVIZ { get; set; }
            public decimal KF_TL_BAKIYE { get; set; }
            public string LOKASYON { get; set; }
            public string ACIKLAMA { get; set; }
            public decimal KUR_BUGUN { get; set; }
            public decimal AGIRLIKLI_ORT_KUR { get; set; }
        }


        private void BtnListele_Click(object sender, EventArgs e)
        {
            
            //var kodu = (string)lookUpEdit1.EditValue;
            
            //long dkodid = (long)lookUpEdit2.EditValue;
            var P1 = new SqlParameter("@lokasyonid", (string)lookUpEdit1.EditValue);
            var P2 = new SqlParameter("@DOVIZ", (long)lookUpEdit2.EditValue);

            var result = db.Database.SqlQuery<ResultForkasa>("crmpos_gunluk_kasatoplam @lokasyonid,@DOVIZ", P1,P2).ToList();
            gridControl1.DataSource = result;
        }
        FileStream fs;
        string fileName = "c:\\ERP12\\gunkasatoplamdisplaycrmpos.xml";
        private void FrKasaguntoplam_Load(object sender, EventArgs e)
        {
            if (File.Exists(@"C:\ERP12\gunkasatoplamdisplaycrmpos.xml"))
            {

                // MessageBox.Show("Dosya bulundu.");
            }
            else
            {
                fs = File.Create(@"C:\ERP12\gunkasatoplamdisplaycrmpos.xml");
                fs.Close();
                //  MessageBox.Show("Dosya mevcut değil.");
            }
            var list = new List<long> { 3320 };
            lookUpEdit1.Properties.DataSource = db.LOKASYON.Where(x => !list.Contains(x.ID)).ToList();
            lookUpEdit1.Properties.DisplayMember = "AD";
            lookUpEdit1.Properties.ValueMember = "ID";
            DevExpress.XtraEditors.Controls.LookUpColumnInfo col;
            col = new DevExpress.XtraEditors.Controls.LookUpColumnInfo("AD", "Lokasyon Seçiniz", 100);            
            lookUpEdit1.Properties.Items.Add(col);
            lookUpEdit2.Properties.DataSource = db.DOVIZ_AD.ToList();
            lookUpEdit2.Properties.DisplayMember = "AD";
            lookUpEdit2.Properties.ValueMember = "ID";
            DevExpress.XtraEditors.Controls.LookUpColumnInfo loc;
            loc = new DevExpress.XtraEditors.Controls.LookUpColumnInfo("AD", "Döviz Seçiniz", 100);            
            lookUpEdit2.Properties.Columns.Add(loc);
            gridView1.OptionsBehavior.Editable = false;
            gridControl1.ForceInitialize();

            try
            {
                gridControl1.MainView.RestoreLayoutFromXml(fileName);
            }
            catch (Exception)
            {
                //XtraMessageBox.Show("Görünüm ayarları yüklenemedi(İlk kez çalıştırıyorsanız dikkate almayınız)", "Warning", MessageBoxButtons.OK, MessageBoxIcon.Question);                
            }
        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {
            Frhareket frhrkt = new Frhareket();
            frhrkt.Show();
        }

        private void FrKasaguntoplam_FormClosing(object sender, FormClosingEventArgs e)
        {
            // Save the layout to an XML file
            gridControl1.MainView.SaveLayoutToXml(fileName);
        }

        private void exceleAktarToolStripMenuItem_Click(object sender, EventArgs e)
        {
            using (SaveFileDialog saveDialog = new SaveFileDialog())
            {
                saveDialog.Filter = "Excel (2003)(.xls)|*.xls|Excel (2010) (.xlsx)|*.xlsx |RichText File (.rtf)|*.rtf |Pdf File (.pdf)|*.pdf |Html File (.html)|*.html";
                if (saveDialog.ShowDialog() != DialogResult.Cancel)
                {
                    string exportFilePath = saveDialog.FileName;
                    string fileExtenstion = new System.IO.FileInfo(exportFilePath).Extension;

                    switch (fileExtenstion)
                    {
                        case ".xls":
                            gridControl1.ExportToXls(exportFilePath);
                            break;
                        case ".xlsx":
                            gridControl1.ExportToXlsx(exportFilePath);
                            break;
                        case ".rtf":
                            gridControl1.ExportToRtf(exportFilePath);
                            break;
                        case ".pdf":
                            gridControl1.ExportToPdf(exportFilePath);
                            break;
                        case ".html":
                            gridControl1.ExportToHtml(exportFilePath);
                            break;
                        case ".mht":
                            gridControl1.ExportToMht(exportFilePath);
                            break;
                        default:
                            break;
                    }

                    if (File.Exists(exportFilePath))
                    {
                        try
                        {
                            //Try to open the file and let windows decide how to open it..
                            System.Diagnostics.Process.Start(exportFilePath);
                        }
                        catch
                        {
                            String msg = "The file could not be opened." + Environment.NewLine + Environment.NewLine + "Path: " + exportFilePath;
                            MessageBox.Show(msg, "Error!", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        }
                    }
                    else
                    {
                        String msg = "The file could not be kaydedildi." + Environment.NewLine + Environment.NewLine + "Path: " + exportFilePath;
                        MessageBox.Show(msg, "Error!", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }
                }
            }
        }
    }
}
